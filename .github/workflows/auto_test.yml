name: auto_test

# This action is triggered:
# 1. when someone creates a pull request for a merge to the main branch
# 2. when changes are merged into the main branch (via a pull request)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Below are jobs, each of which runs sequentially.
jobs:
  # This job builds the box model and runs our test suite.
  build:
    # A build matrix storing all desired configurations.
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
        build-type: [Debug, Release]
        fp-precision: [double] #[single, double]
        pack-size: [1, 4]

    runs-on: ${{ matrix.os }}

    # Pre-fab container with third-party libs installed.
    container: coherellc/haero-tpl:${{ matrix.build-type }}-${{ matrix.fp-precision }}-pack-size-${{ matrix.pack-size }}

    # Environment variables
    env:
      FC: gfortran
      HDF5_LIBRARY_NAME: libhdf5.a
      HDF5_HL_LIBRARY_NAME: libhdf5_hl.a

    # Steps for building and running tests.
    steps:

    - name: Setting HDF5 library names (Debug)
      if: contains(matrix.build-type, 'Debug')
      run: |
        echo "HDF5_LIBRARY_NAME=libhdf5_debug.a" >> $GITHUB_ENV
        echo "HDF5_HL_LIBRARY_NAME=libhdf5_hl_debug.a" >> $GITHUB_ENV

    - name: Checking out repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        submodules: recursive

    - name: Configuring haero (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision, pack size=${{ matrix.pack-size }})
      run: |
        ./setup build
        cd build
        cmake \
          -DCMAKE_INSTALL_PREFIX=`pwd`/build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DCMAKE_CXX_COMPILER=mpicxx \
          -DCMAKE_C_COMPILER=mpicc \
          -DCMAKE_Fortran_COMPILER=mpif90 \
          -DHAERO_PRECISION=${{ matrix.fp-precision }} \
          -DHAERO_DEVICE=CPU \
          -DHAERO_DEVICE_ARCH=AMDAVX \
          -DHAERO_PACK_SIZE=${{ matrix.pack-size}} \
          -DHAERO_ENABLE_DRIVER=ON \
          -DHAERO_AUTOTESTER=ON \
          -DEKAT_LIBRARY=/opt/haero/lib/libekat.a \
          -DEKAT_INCLUDE_DIR=/opt/haero/include \
          -DYAMLCPP_LIBRARY=/opt/haero/lib/libyaml-cpp.a \
          -DYAMLCPP_INCLUDE_DIR=/opt/haero/include \
          -DHDF5_LIBRARY=/opt/haero/lib/${HDF5_LIBRARY_NAME} \
          -DHDF5_HL_LIBRARY=/opt/haero/lib/${HDF5_HL_LIBRARY_NAME} \
          -DHDF5_INCLUDE_DIR=/opt/haero/include \
          -DNETCDF_LIBRARY=/opt/haero/lib/libnetcdf.a \
          -DNETCDF_INCLUDE_DIR=/opt/haero/include \
          -DKOKKOS_KERNELS_LIBRARY=/opt/haero/lib/libkokkoskernels.a \
          -DKOKKOS_KERNELS_INCLUDE_DIR=/opt/haero/include \
          -DTCHEM_LIBRARY=/opt/haero/lib/libtchemcore.a \
          -DTCHEM_INCLUDE_DIR=/opt/haero/include \
          -G "Unix Makefiles" \
          ..

    - name: Building haero (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        cd build
        make -j

    - name: Running tests (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        cd build
        ctest -V

    - name: Installing haero (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        cd build
        make install

